- name: disable current version of nodejs
  ansible.builtin.command: "dnf module disable nodejs -y"

- name: enabling new version of nodejs
  ansible.builtin.command: "dnf module enable nodejs:20 -y"  

- name: install nodejs
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  loop:
  - nodejs
  - mysql  

- name: create a user
  ansible.builtin.user:
   name: expense

- name: include role common
  ansible.builtin.include_role:
    name: common
    tasks_from: main 

# - name: Create app directory
#   ansible.builtin.file:
#     path: /app
#     state: directory   

# - name: Download backend code
#   ansible.builtin.get_url:
#    url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
#    dest: /tmp/backend.zip 

# - name: unzip the backend code
#   ansible.builtin.unarchive:
#    src: /tmp/backend.zip
#    dest: /app
#    remote_src: yes   

- name: Install dependencies
  community.general.npm:
   path: /app

- name: copy backend service
  ansible.builtin.template:
   src: backend.service.j2
   dest: /etc/systemd/system/backend.service 

- name: install python libs
  ansible.builtin.pip:
   name: "{{ item }}"
   executable: pip3.9
  loop:
  - cryptography
  - PyMySQL   

- name: import mysql data
  community.mysql.mysql_db:
    name: all
    state: import
    login_user: "{{ user }}"
    login_password: "{{ password }}"
    login_host: "{{ my_sql_host }}"
    target: /app/schema/backend.sql

- name: daemon reload and restart service
  ansible.builtin.systemd_service:
    name: backend
    enabled: true
    state: restarted
    daemon_reload: true
  tags:
  - packages  